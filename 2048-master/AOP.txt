
"void MainActivity.onCreate(Bundle)"->"void MainGame.newGame()"
"void MainGame.newGame()"->"void Grid.clearGrid()"
"void MainGame.newGame()"->"void Grid.clearUndoGrid()"
"void MainGame.newGame()"->"long MainGame.getHighScore()"
"void MainGame.newGame()"->"void MainGame.recordHighScore()"
"void MainGame.newGame()"->"void MainGame.addStartTiles()"
"void MainGame.addStartTiles()"->"void MainGame.addRandomTile()"
"void MainGame.addRandomTile()"->"boolean Grid.isCellsAvailable()"
"boolean Grid.isCellsAvailable()"->"ArrayList Grid.getAvailableCells()"
"void MainGame.addRandomTile()"->"Cell Grid.randomAvailableCell()"
"Cell Grid.randomAvailableCell()"->"ArrayList Grid.getAvailableCells()"
"void MainGame.addRandomTile()"->"int Cell.getX()"
"void MainGame.addRandomTile()"->"int Cell.getY()"
"void MainGame.addRandomTile()"->"void MainGame.spawnTile(Tile)"
"void MainGame.spawnTile(Tile)"->"void Grid.insertTile(Tile)"
"void Grid.insertTile(Tile)"->"int Cell.getX()"
"void Grid.insertTile(Tile)"->"int Cell.getY()"
"void MainGame.spawnTile(Tile)"->"int Cell.getX()"
"void MainGame.spawnTile(Tile)"->"int Cell.getY()"
"void MainGame.spawnTile(Tile)"->"void AnimationGrid.startAnimation(int, int, int, long, long, int[])"
"void MainGame.newGame()"->"void MainView.resyncTime()"
"void MainActivity.onCreate(Bundle)"->"void MainActivity.loadKGAds()"
"void MainActivity.onResume()"->"void MainActivity.load()"
"void MainActivity.load()"->"void AnimationGrid.cancelAnimations()"
"void MainView.onSizeChanged(int, int, int, int)"->"void MainView.getLayout(int, int)"
"void MainView.getLayout(int, int)"->"int MainView.centerText()"
"void MainView.getLayout(int, int)"->"void MainView.resyncTime()"
"void MainView.onSizeChanged(int, int, int, int)"->"void MainView.createBitmapCells()"
"void MainView.createBitmapCells()"->"int[] MainView.getCellRectangleIds()"
"void MainView.createBitmapCells()"->"void MainView.drawDrawable(Canvas, Drawable, int, int, int, int)"
"void MainView.createBitmapCells()"->"void MainView.drawCellText(Canvas, int, int, int)"
"void MainView.drawCellText(Canvas, int, int, int)"->"int MainView.centerText()"
"void MainView.onSizeChanged(int, int, int, int)"->"void MainView.createBackgroundBitmap(int, int)"
"void MainView.createBackgroundBitmap(int, int)"->"void MainView.drawHeader(Canvas)"
"void MainView.drawHeader(Canvas)"->"int MainView.centerText()"
"void MainView.createBackgroundBitmap(int, int)"->"void MainView.drawNewGameButton(Canvas, boolean)"
"void MainView.drawNewGameButton(Canvas, boolean)"->"void MainView.drawDrawable(Canvas, Drawable, int, int, int, int)"
"void MainView.createBackgroundBitmap(int, int)"->"void MainView.drawUndoButton(Canvas)"
"void MainView.drawUndoButton(Canvas)"->"void MainView.drawDrawable(Canvas, Drawable, int, int, int, int)"
"void MainView.createBackgroundBitmap(int, int)"->"void MainView.drawBackground(Canvas)"
"void MainView.drawBackground(Canvas)"->"void MainView.drawDrawable(Canvas, Drawable, int, int, int, int)"
"void MainView.createBackgroundBitmap(int, int)"->"void MainView.drawBackgroundGrid(Canvas)"
"void MainView.drawBackgroundGrid(Canvas)"->"void MainView.drawDrawable(Canvas, Drawable, int, int, int, int)"
"void MainView.createBackgroundBitmap(int, int)"->"void MainView.drawInstructions(Canvas)"
"void MainView.drawInstructions(Canvas)"->"int MainView.centerText()"
"void MainView.onSizeChanged(int, int, int, int)"->"void MainView.createOverlays()"
"void MainView.createOverlays()"->"void MainView.createEndGameStates(Canvas, boolean, boolean)"
"void MainView.createEndGameStates(Canvas, boolean, boolean)"->"void MainView.drawDrawable(Canvas, Drawable, int, int, int, int)"
"void MainView.createEndGameStates(Canvas, boolean, boolean)"->"int MainView.centerText()"
"void MainView.onDraw(Canvas)"->"void MainView.drawScoreText(Canvas)"
"void MainView.onDraw(Canvas)"->"boolean MainGame.isActive()"
"boolean MainGame.isActive()"->"boolean MainGame.gameWon()"
"boolean MainGame.isActive()"->"boolean MainGame.gameLost()"
"void MainView.onDraw(Canvas)"->"void MainView.drawCells(Canvas)"
"void MainView.drawCells(Canvas)"->"Tile Grid.getCellContent(int, int)"
"Tile Grid.getCellContent(int, int)"->"boolean Grid.isCellWithinBounds(int, int)"
"void MainView.drawCells(Canvas)"->"int Tile.getValue()"
"void MainView.drawCells(Canvas)"->"int MainView.log2(int)"
"void MainView.drawCells(Canvas)"->"ArrayList AnimationGrid.getAnimationCell(int, int)"
"void MainView.onDraw(Canvas)"->"boolean MainGame.canContinue()"
"void MainView.onDraw(Canvas)"->"boolean AnimationGrid.isAnimationActive()"
"boolean MainActivity.onKeyDown(int, KeyEvent)"->"void MainGame.move(int)"
"void MainGame.move(int)"->"void AnimationGrid.cancelAnimations()"
"void MainGame.move(int)"->"boolean MainGame.isActive()"
"void MainGame.move(int)"->"void MainGame.prepareUndoState()"
"void MainGame.prepareUndoState()"->"void Grid.prepareSaveTiles()"
"void Grid.prepareSaveTiles()"->"int Tile.getValue()"
"void MainGame.move(int)"->"Cell MainGame.getVector(int)"
"void MainGame.move(int)"->"List MainGame.buildTraversalsX(Cell)"
"List MainGame.buildTraversalsX(Cell)"->"int Cell.getX()"
"void MainGame.move(int)"->"List MainGame.buildTraversalsY(Cell)"
"List MainGame.buildTraversalsY(Cell)"->"int Cell.getY()"
"void MainGame.move(int)"->"void MainGame.prepareTiles()"
"void MainGame.prepareTiles()"->"boolean Grid.isCellOccupied(Cell)"
"boolean Grid.isCellOccupied(Cell)"->"Tile Grid.getCellContent(Cell)"
"Tile Grid.getCellContent(Cell)"->"boolean Grid.isCellWithinBounds(Cell)"
"boolean Grid.isCellWithinBounds(Cell)"->"int Cell.getX()"
"boolean Grid.isCellWithinBounds(Cell)"->"int Cell.getY()"
"Tile Grid.getCellContent(Cell)"->"int Cell.getX()"
"Tile Grid.getCellContent(Cell)"->"int Cell.getY()"
"void MainGame.prepareTiles()"->"void Tile.setMergedFrom(Tile[])"
"void MainGame.move(int)"->"Tile Grid.getCellContent(Cell)"
"void MainGame.move(int)"->"Cell[] MainGame.findFarthestPosition(Cell, Cell)"
"Cell[] MainGame.findFarthestPosition(Cell, Cell)"->"int Cell.getX()"
"Cell[] MainGame.findFarthestPosition(Cell, Cell)"->"int Cell.getY()"
"Cell[] MainGame.findFarthestPosition(Cell, Cell)"->"boolean Grid.isCellWithinBounds(Cell)"
"Cell[] MainGame.findFarthestPosition(Cell, Cell)"->"boolean Grid.isCellAvailable(Cell)"
"boolean Grid.isCellAvailable(Cell)"->"boolean Grid.isCellOccupied(Cell)"
"void MainGame.move(int)"->"void MainGame.moveTile(Tile, Cell)"
"void MainGame.moveTile(Tile, Cell)"->"int Cell.getX()"
"void MainGame.moveTile(Tile, Cell)"->"int Cell.getY()"
"void MainGame.moveTile(Tile, Cell)"->"void Tile.updatePosition(Cell)"
"void Tile.updatePosition(Cell)"->"int Cell.getX()"
"void Tile.updatePosition(Cell)"->"void Cell.setX(int)"
"void Tile.updatePosition(Cell)"->"int Cell.getY()"
"void Tile.updatePosition(Cell)"->"void Cell.setY(int)"
"void MainGame.move(int)"->"int Cell.getX()"
"void MainGame.move(int)"->"int Cell.getY()"
"void MainGame.move(int)"->"void AnimationGrid.startAnimation(int, int, int, long, long, int[])"
"void MainGame.move(int)"->"boolean MainGame.positionsEqual(Cell, Cell)"
"boolean MainGame.positionsEqual(Cell, Cell)"->"int Cell.getX()"
"boolean MainGame.positionsEqual(Cell, Cell)"->"int Cell.getY()"
"void MainGame.move(int)"->"void MainGame.saveUndoState()"
"void MainGame.saveUndoState()"->"void Grid.saveTiles()"
"void Grid.saveTiles()"->"int Tile.getValue()"
"void MainGame.move(int)"->"void MainGame.addRandomTile()"
"void MainGame.move(int)"->"void MainGame.checkLose()"
"void MainGame.checkLose()"->"boolean MainGame.movesAvailable()"
"boolean MainGame.movesAvailable()"->"boolean Grid.isCellsAvailable()"
"void MainGame.move(int)"->"void MainView.resyncTime()"
"void MainView.drawCells(Canvas)"->"int AnimationCell.getAnimationType()"
"void MainView.drawCells(Canvas)"->"boolean AnimationCell.isActive()"
"void MainView.drawCells(Canvas)"->"double AnimationCell.getPercentageDone()"
"void MainView.drawCells(Canvas)"->"int Cell.getX()"
"void MainView.drawCells(Canvas)"->"int Cell.getY()"
"void MainView.onDraw(Canvas)"->"void MainView.tick()"
"void MainView.tick()"->"void AnimationGrid.tickAll(long)"
"void AnimationGrid.tickAll(long)"->"void AnimationCell.tick(long)"
"void AnimationGrid.tickAll(long)"->"boolean AnimationCell.animationDone()"
"void AnimationGrid.tickAll(long)"->"void AnimationGrid.cancelAnimation(AnimationCell)"
"void AnimationGrid.cancelAnimation(AnimationCell)"->"int Cell.getX()"
"void AnimationGrid.cancelAnimation(AnimationCell)"->"int Cell.getY()"
"void MainGame.move(int)"->"int Tile.getValue()"
"void MainGame.move(int)"->"Tile[] Tile.getMergedFrom()"
"void MainGame.move(int)"->"void Tile.setMergedFrom(Tile[])"
"void MainGame.move(int)"->"void Grid.insertTile(Tile)"
"void MainGame.move(int)"->"void Grid.removeTile(Tile)"
"void Grid.removeTile(Tile)"->"int Cell.getX()"
"void Grid.removeTile(Tile)"->"int Cell.getY()"
"void MainGame.move(int)"->"void Tile.updatePosition(Cell)"
"void MainGame.move(int)"->"int MainGame.winValue()"
"int MainGame.winValue()"->"boolean MainGame.canContinue()"
"boolean InputListener.onTouch(View, MotionEvent)"->"boolean InputListener.iconPressed(int, int)"
"boolean InputListener.iconPressed(int, int)"->"boolean InputListener.isTap(int)"
"boolean InputListener.isTap(int)"->"float InputListener.pathMoved()"
"boolean InputListener.iconPressed(int, int)"->"boolean InputListener.inRange(float, float, float)"
"boolean InputListener.onTouch(View, MotionEvent)"->"void MainGame.revertUndoState()"
"void MainGame.revertUndoState()"->"void AnimationGrid.cancelAnimations()"
"void MainGame.revertUndoState()"->"void Grid.revertTiles()"
"void Grid.revertTiles()"->"int Tile.getValue()"
"boolean InputListener.onTouch(View, MotionEvent)"->"void MainGame.newGame()"
"void MainGame.newGame()"->"void MainGame.prepareUndoState()"
"void MainGame.newGame()"->"void MainGame.saveUndoState()"